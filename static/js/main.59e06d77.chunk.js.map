{"version":3,"sources":["components/Burger/BurgerIngrediant/BurgerIngrediant.module.scss","components/Layout/Layout.module.scss","components/Burger/Burger.module.scss","hoc/Aux.js","components/Layout/Layout.jsx","components/Burger/BurgerIngrediant/BurgerIngrediant.jsx","components/Burger/Burger.jsx","components/Burger/BuildControls/BuildControl/BuildControl.jsx","components/Burger/BuildControls/BuildControls.jsx","containers/BurgerBuilder/BurgerBuilder.jsx","containers/App.js","serviceWorker.js","index.js","components/Burger/BuildControls/BuildControl/BuildControl.module.scss","components/Burger/BuildControls/BuildControls.module.scss"],"names":["module","exports","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","container","Burger","aux","props","children","layout","react_default","a","createElement","Aux","className","Classes","BurgerIngrediant","ingredient","this","type","Component","burger","transformedIngredients","Object","keys","ingredients","map","ingKey","toConsumableArray","Array","_","i","Burger_BurgerIngrediant_BurgerIngrediant","key","reduce","prev","curr","concat","length","buildControl","BuildControl","Label","lable","disabled","onClick","removed","Less","added","More","controls","label","buildControls","BuildControls","Price","price","toFixed","ctrl","ingridentAdded","ingredientRemoved","disabledCheck","INGREDIENT_PRICES","salad","bacon","cheese","meat","BurgerBuilder","state","totalPrice","addIngredientHandler","updatedCount","_this","updatedIngredients","objectSpread","priceAddition","newPrice","setState","removeIngredientHandler","oldCount","disableInfo","App","Layout","containers_BurgerBuilder_BurgerBuilder","Boolean","window","location","hostname","match","ReactDOM","render","containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.59e06d77.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngrediant_BreadBottom__3QWT_\",\"BreadTop\":\"BurgerIngrediant_BreadTop__203kI\",\"Seeds1\":\"BurgerIngrediant_Seeds1__3fYLA\",\"Seeds2\":\"BurgerIngrediant_Seeds2__1r1Z0\",\"Meat\":\"BurgerIngrediant_Meat__3LHSh\",\"Cheese\":\"BurgerIngrediant_Cheese__1uTOx\",\"Salad\":\"BurgerIngrediant_Salad__3LiIY\",\"Bacon\":\"BurgerIngrediant_Bacon__ZlIQL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Layout_container__3Qs2N\",\"Burger\":\"Layout_Burger__emu5v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__FxsD8\"};","const aux = props => props.children;\r\n\r\nexport default aux;\r\n","import React from \"react\";\r\nimport Aux from \"../../hoc/Aux\";\r\nimport Classes from \"./Layout.module.scss\";\r\n\r\nconst layout = props => (\r\n  <Aux>\r\n    <div>Toolbar, SideDrawer, Backdrop</div>\r\n    <main className={Classes.container}>{props.children}</main>\r\n  </Aux>\r\n);\r\n\r\nexport default layout;\r\n","import React, { Component } from \"react\";\r\nimport Classes from \"./BurgerIngrediant.module.scss\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass BurgerIngrediant extends Component {\r\n  render() {\r\n    let ingredient = null;\r\n\r\n    switch (this.props.type) {\r\n      case \"bread-bottom\":\r\n        ingredient = <div className={Classes.BreadBottom}> </div>;\r\n        break;\r\n      case \"bread-top\":\r\n        ingredient = (\r\n          <div className={Classes.BreadTop}>\r\n            <div className={Classes.Seeds1} />\r\n            <div className={Classes.Seeds2} />\r\n          </div>\r\n        );\r\n        break;\r\n\r\n      case \"meat\":\r\n        ingredient = <div className={Classes.Meat} />;\r\n        break;\r\n\r\n      case \"cheese\":\r\n        ingredient = <div className={Classes.Cheese} />;\r\n        break;\r\n\r\n      case \"salad\":\r\n        ingredient = <div className={Classes.Salad} />;\r\n        break;\r\n\r\n      case \"bacon\":\r\n        ingredient = <div className={Classes.Bacon} />;\r\n        break;\r\n      default:\r\n        ingredient = null;\r\n    }\r\n\r\n    return ingredient;\r\n  }\r\n}\r\n\r\nBurgerIngrediant.propTypes = {\r\n  type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngrediant;\r\n","import React from \"react\";\r\nimport Classes from \"./Burger.module.scss\";\r\nimport BurgerIngrediant from \"./BurgerIngrediant/BurgerIngrediant\";\r\n\r\nconst burger = props => {\r\n  let transformedIngredients = Object.keys(props.ingredients)\r\n    .map(ingKey => {\r\n      return [...Array(props.ingredients[ingKey])].map((_, i) => (\r\n        <BurgerIngrediant key={ingKey + i} type={ingKey} />\r\n      ));\r\n    })\r\n    .reduce((prev, curr) => {\r\n      return prev.concat(curr);\r\n    }, []);\r\n\r\n  if (transformedIngredients.length === 0) {\r\n    transformedIngredients = <p>Please Start Adding Ingredients</p>;\r\n  }\r\n\r\n  return (\r\n    <div className={Classes.Burger}>\r\n      <BurgerIngrediant type=\"bread-top\" />\r\n      {transformedIngredients}\r\n      <BurgerIngrediant type=\"bread-bottom\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default burger;\r\n","import React from \"react\";\r\nimport Classes from \"./BuildControl.module.scss\";\r\n\r\nconst buildControl = props => {\r\n  return (\r\n    <div className={Classes.BuildControl}>\r\n      <div className={Classes.Label}>{props.lable}</div>\r\n      <button\r\n        disabled={props.disabled}\r\n        onClick={props.removed}\r\n        className={Classes.Less}\r\n      >\r\n        Less\r\n      </button>\r\n      <button onClick={props.added} className={Classes.More}>\r\n        More\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default buildControl;\r\n","import React from \"react\";\r\nimport Classes from \"./BuildControls.module.scss\";\r\nimport BuildControl from \"./BuildControl/BuildControl\";\r\n\r\nconst controls = [\r\n  { label: \"Salad\", type: \"salad\" },\r\n  { label: \"Bacon\", type: \"bacon\" },\r\n  { label: \"Cheese\", type: \"cheese\" },\r\n  { label: \"Meat\", type: \"meat\" }\r\n];\r\nconst buildControls = props => {\r\n  return (\r\n    <div className={Classes.BuildControls}>\r\n      <h3 className={Classes.Price}>\r\n        Price: <strong>{props.price.toFixed(2)}</strong>\r\n      </h3>\r\n      {controls.map(ctrl => (\r\n        <BuildControl\r\n          added={() => props.ingridentAdded(ctrl.type)}\r\n          removed={() => props.ingredientRemoved(ctrl.type)}\r\n          key={ctrl.label}\r\n          lable={ctrl.label}\r\n          disabled={props.disabledCheck[ctrl.type]}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default buildControls;\r\n","import React, { Component } from \"react\";\r\nimport Aux from \"../../hoc/Aux\";\r\nimport Burger from \"../../components/Burger/Burger\";\r\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\r\n\r\nconst INGREDIENT_PRICES = {\r\n  salad: 0.5,\r\n  bacon: 0.7,\r\n  cheese: 0.4,\r\n  meat: 1.3\r\n};\r\n\r\nclass BurgerBuilder extends Component {\r\n  state = {\r\n    ingredients: {\r\n      salad: 0,\r\n      bacon: 0,\r\n      cheese: 0,\r\n      meat: 0\r\n    },\r\n    totalPrice: 4\r\n  };\r\n\r\n  addIngredientHandler = type => {\r\n    const oldCount = this.state.ingredients[type];\r\n    const updatedCount = oldCount + 1;\r\n    const updatedIngredients = {\r\n      ...this.state.ingredients\r\n    };\r\n    updatedIngredients[type] = updatedCount;\r\n    const priceAddition = INGREDIENT_PRICES[type];\r\n    const oldPrice = this.state.totalPrice;\r\n    const newPrice = oldPrice + priceAddition;\r\n    this.setState({ ingredients: updatedIngredients, totalPrice: newPrice });\r\n  };\r\n  removeIngredientHandler = type => {\r\n    const oldCount = this.state.ingredients[type];\r\n    let updatedCount = oldCount - 1;\r\n    if (oldCount <= 0) {\r\n      return;\r\n    }\r\n\r\n    const updatedIngredients = {\r\n      ...this.state.ingredients\r\n    };\r\n    updatedIngredients[type] = updatedCount;\r\n    const priceAddition = INGREDIENT_PRICES[type];\r\n    const oldPrice = this.state.totalPrice;\r\n    let newPrice = oldPrice - priceAddition;\r\n    if (newPrice < 4) {\r\n      return;\r\n    }\r\n    this.setState({ ingredients: updatedIngredients, totalPrice: newPrice });\r\n  };\r\n\r\n  render() {\r\n    let disableInfo = {\r\n      ...this.state.ingredients\r\n    };\r\n    for (let key in disableInfo) {\r\n      disableInfo[key] = disableInfo[key] <= 0;\r\n    }\r\n\r\n    return (\r\n      <Aux>\r\n        <Burger ingredients={this.state.ingredients} />\r\n        <BuildControls\r\n          ingredientRemoved={this.removeIngredientHandler}\r\n          ingridentAdded={this.addIngredientHandler}\r\n          price={this.state.totalPrice}\r\n          disabledCheck={disableInfo}\r\n        />\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BurgerBuilder;\r\n","import React, { Component } from \"react\";\nimport Layout from \"../components/Layout/Layout\";\nimport BurgerBuilder from \"../containers/BurgerBuilder/BurgerBuilder\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Layout>\n          <BurgerBuilder />\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__opRST\",\"Less\":\"BuildControl_Less__2WmBy\",\"More\":\"BuildControl_More__3d2X5\",\"Label\":\"BuildControl_Label__1bI6o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1U11D\",\"Price\":\"BuildControls_Price__FJg0v\"};"],"sourceRoot":""}